import static org.gradle.api.tasks.wrapper.Wrapper.DistributionType

buildscript {
    ext {
        artifactoryContextUrl = "https://artifactory.corp.alleninstitute.org/artifactory"
    }
    repositories {
        mavenLocal()
        maven {
            url "${artifactoryContextUrl}/maven-virtual"
        }
        mavenCentral()
    }
    dependencies {
        classpath("org.hibernate.build.gradle:gradle-maven-publish-auth:2.0.1")
    }
}

plugins {
    id "com.dorongold.task-tree" version "1.3.1"
    id "com.moowork.node" version "1.2.0"
}

apply plugin: "maven-publish"
apply plugin: "maven-publish-auth"

node {
    version = "10.15.3"
    npmVersion = "6.4.1"
    download = true
    nodeModulesDir = file("${project.projectDir}")
}

project.version = "0.1.x"
project.group = "org.alleninstitute.aics"

ext {
    env = System.getenv("DEPLOYMENT_ENV") ?: "dev"
    npmBin = "${projectDir}/node_modules/.bin"

    // Repo settings
    artifactoryBaseUrl = "https://artifactory.corp.alleninstitute.org/artifactory"

    // TGZ Publishing
    distParentDir = file("$projectDir/dist")
    artifactVersion = project.version
    // todo get branch name and use in artifactVersion if not master
//    artifactVersion = dockerPublish.branchName != "master" ? "${dockerPublish.branchName.tokenize("/").join("-")}" : project.version
    artifactName = "${project.name}-${ext.artifactVersion}.tgz"
}

wrapper {
    gradleVersion "5.2"
    setDistributionType(DistributionType.BIN)
}

task lint(type: NodeTask) {
    script =  file("${npmBin}/tslint")
    FileTree tsFiles = fileTree(dir: "src", includes: ["**/*.ts", "**/*.tsx"])
    args = ["-c", "tslint.json"] + tsFiles.asList()
}

task test(type: NodeTask) {
    environment = [TS_NODE_PROJECT: "tsconfig.commonjs.json", NODE_ENV: "production"]
    script = file("${npmBin}/mocha")
    args = ["--opts", "mocha.opts", "src/**/test/*.{ts,tsx}"]
}

task dev(type: NodeTask) {
    environment = [
            NODE_ENV: "development",
    ]

    script = file("${npmBin}/electron-webpack")
    args = ["dev"]
}

///////////////////////////
// Build and publish
//////////////////////////

task compile(type: NodeTask) {
    script = file("${npmBin}/electron-webpack")
}

task bundle(type: NodeTask) {
    dependsOn compile
    script = file("${npmBin}/electron-builder")
}

/// Publishing
task packageForPublish(type: Tar) {
    dependsOn bundle

    from distParentDir
    destinationDir file("${projectDir}")
    archiveName "$artifactName"
    compression Compression.GZIP
}

task artifactClean(type: Delete) {
    delete "$artifactName"
}

task localPublish {
    description "Create development module and publish to local cache"
    group "AICS Publishing"
    dependsOn packageForPublish, "publishMvnModulePublicationToMavenLocal"
}

task snapshotPublish {
    description "Create production module and publish to snapshot repo in artifactory"
    group "AICS Publishing"
    dependsOn packageForPublish, "publishMvnModulePublicationToSnapshotsRepoRepository"
}

publishing {
    publications {
        mvnModule(MavenPublication) {
            version artifactVersion
            artifact packageForPublish
        }
    }

    repositories {
        maven {
            name = "snapshotsRepo"
            url "${artifactoryBaseUrl}/maven-snapshot-local"
        }
    }
}
