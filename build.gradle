import static org.gradle.api.tasks.wrapper.Wrapper.DistributionType

buildscript {
    ext {
        artifactoryContextUrl = "https://artifactory.corp.alleninstitute.org/artifactory"
    }
    repositories {
        mavenLocal()
        maven {
            url "${artifactoryContextUrl}/maven-virtual"
        }
        mavenCentral()
    }
    dependencies {
        classpath("org.alleninstitute.aics:gradle-plugins:1.0.23")
    }
}

plugins {
    id "com.dorongold.task-tree" version "1.3.1"
    id "com.moowork.node" version "1.2.0"
}

apply plugin: "org.alleninstitute.git-info"

node {
    version = "10.15.3"
    npmVersion = "6.9.0"
    download = true
    nodeModulesDir = file("${project.projectDir}")
}

project.version = "0.1.x"
project.group = "org.alleninstitute.aics"

ext {
    // Repo settings
    artifactoryBaseUrl = "https://artifactory.corp.alleninstitute.org/artifactory"

    artifactVersion = gitInfo.branch != "master" ? "${gitInfo.branch.tokenize("/").join("-")}" : project.version
}

wrapper {
    gradleVersion "5.2"
    setDistributionType(DistributionType.BIN)
}

task lint(type: YarnTask) {
    args = ["lint"]
}

task test(type: YarnTask) {
   args = ["test"]
}

task detectCircularDeps(type: YarnTask) {
    args = ["madge"]
}

task dev(type: YarnTask) {
    environment = [NODE_ENV: "development"]
    args = ["electron-webpack", "dev"]
}

task devStg(type: YarnTask) {
    args = ["compile-stage", "dev"]
}

task devCache(type: YarnTask) {
    args = ["compile-cache", "dev"]
}

///////////////////////////
// Build and publish
//////////////////////////
task artifactClean(type: Delete) {
    delete "$projectDir/dist"
}


task compile(type: YarnTask) {
    args = ["electron-webpack"]
}
